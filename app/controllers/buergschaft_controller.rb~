class BuergschaftController < ApplicationController

  def index
    @buergschaften = Buergschaft.paginate(:page => params[:page], :per_page => 5)
  end

  def new
    if( !params[:pnrB].nil? ) then
      @buergschaft = Buergschaft.find([params[:pnrB], params[:mnrG]] )
    end
    
    if  params[:ktoNr].nil? then
        @konten = OZBKonto.paginate(:page => params[:page], :per_page => 5) 
    else
        if params[:ktoNr].empty? and params[:mnr].empty? and  params[:name].empty? and 
        params[:ktoEinrDatum].empty? then
          @konten = OZBKonto.paginate(:page => params[:page], :per_page => 5) 
        else
          @konten = OZBKonto;
          
          if( !params[:ktoNr].empty? ) then
            @konten = @konten.where(:ktoNr => params[:ktoNr])
          end
          
          if( !params[:mnr].empty? ) then
            @konten = @konten.where(:mnr => params[:mnr])
          end
          
          if( !params[:name].empty? ) then
            @personen = Person.all
            
            @personen.each do |person|
              name = person.name.to_s.downcase + " " +  person.vorname.to_s.downcase
              searchName = params[:name].downcase
              puts name
              if name.include? searchName then
                @konten = @konten.where(:mnr => person.OZBPerson.first.mnr)
                break
              end
              
            end
          end
          
          if( !params[:ktoEinrDatum].empty? ) then
            @konten = @konten.where(:ktoEinrDatum => params[:ktoEinrDatum])
          end
          
          @konten = @konten.paginate(:page => params[:page], :per_page => 5)
        end
    end
  end
  
  def searchKtoNr
    if( !params[:pnrB].nil? ) then
      @buergschaft = Buergschaft.find([params[:pnrB], params[:mnrG]] )
    end
    
    if  params[:ktoNr].nil? then
        @konten = OZBKonto.paginate(:page => params[:page], :per_page => 5) 
    else
        if params[:ktoNr].empty? and params[:mnr].empty? and  params[:name].empty? and 
        params[:ktoEinrDatum].empty? then
          @konten = OZBKonto.paginate(:page => params[:page], :per_page => 5) 
        else
          @konten = OZBKonto;
          
          if( !params[:ktoNr].empty? ) then
            @konten = @konten.where(:ktoNr => params[:ktoNr])
          end
          
          if( !params[:mnr].empty? ) then
            @konten = @konten.where(:mnr => params[:mnr])
          end
          
          if( !params[:name].empty? ) then
            @personen = Person.all
            
            @personen.each do |person|
              name = person.name.to_s.downcase + " " +  person.vorname.to_s.downcase
              searchName = params[:name].downcase
              puts name
              if name.include? searchName then
                @konten = @konten.where(:mnr => person.OZBPerson.first.mnr)
                break
              end
              
            end
          end
          
          if( !params[:ktoEinrDatum].empty? ) then
            @konten = @konten.where(:ktoEinrDatum => params[:ktoEinrDatum])
          end
          
          @konten = @konten.paginate(:page => params[:page], :per_page => 5)
        end
    end
  end
  
  def edit
    if( !params[:pnrB].nil? ) then
      @buergschaft = Buergschaft.find([params[:pnrB], params[:mnrG]] )
    end
    
    if  params[:ktoNr].nil? then
        @konten = OZBKonto.paginate(:page => params[:page], :per_page => 5) 
    else
        if params[:ktoNr].empty? and params[:mnr].empty? and  params[:name].empty? and 
        params[:ktoEinrDatum].empty? then
          @konten = OZBKonto.paginate(:page => params[:page], :per_page => 5) 
        else
          @konten = OZBKonto;
          
          if( !params[:ktoNr].empty? ) then
            @konten = @konten.where(:ktoNr => params[:ktoNr])
          end
          
          if( !params[:mnr].empty? ) then
            @konten = @konten.where(:mnr => params[:mnr])
          end
          
          if( !params[:name].empty? ) then
            @personen = Person.all
            
            @personen.each do |person|
              name = person.name.to_s.downcase + " " +  person.vorname.to_s.downcase
              searchName = params[:name].downcase
              puts name
              if name.include? searchName then
                @konten = @konten.where(:mnr => person.OZBPerson.first.mnr)
                break
              end
              
            end
          end
          
          if( !params[:ktoEinrDatum].empty? ) then
            @konten = @konten.where(:ktoEinrDatum => params[:ktoEinrDatum])
          end
          
          @konten = @konten.paginate(:page => params[:page], :per_page => 5)
        end
    end
  end
    
  def save
    begin
      @buergschaft = Buergschaft.find([params[:pnrB], params[:mnrG]])
      @buergschaft.sichEndDatum = Date.parse(params[:sichEndDatum])
      @buergschaft.sichBetrag = params[:sichBetrag]
      @buergschaft.sichKurzBez = params[:sichKurzBez]
      @buergschaft.ktoNr = params[:ktoNr]
      @buergschaft.save
      puts @buergschaft.inspect
    rescue
        @new_buergschaft = Buergschaft.create( :pnrB => params[:pnrB], :mnrG => params[:mnrG],
                                              :ktoNr => params[:ktoNr], :sichAbDatum => Date.parse(params[:sichAbDatum]),
                                              :sichEndDatum => Date.parse(params[:sichEndDatum]), :sichBetrag => params[:sichBetrag],
                                              :sichKurzBez => params[:sichKurzBez] )
        @new_buergschaft.save
    end
    
    @buergschaften = Buergschaft.all
    redirect_to :action => "index"
  end
  
  def delete
    begin
      @buergschaft = Buergschaft.find([params[:pnrB], params[:mnrG]])
      @buergschaft.delete
    rescue
    end
    
    @buergschaften = Buergschaft.all    
    redirect_to :action => "index"
  end

end
